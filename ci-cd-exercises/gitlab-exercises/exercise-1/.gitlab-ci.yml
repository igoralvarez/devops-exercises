variables:
  IMAGE_NAME: "maven:3.6.3-jdk-8-slim"
  REGISTRY_PATH: "$CI_REGISTRY/$CI_PROJECT_PATH"

stages:
  - maven:build
  - maven:test
  - docker:build
  - deploy

maven:build:
  image: $IMAGE_NAME
  stage: maven:build
  script:
    - mvn clean package
  artifacts:
    when: on_success
    paths:
      - "target/*.jar"

maven:ut:
  image: $IMAGE_NAME
  stage: maven:test
  dependencies:
    - maven:build
  script:
    - mvn verify
  artifacts:
    when: on_success
    paths:
      - "target/"

build:
  stage: docker:build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $REGISTRY_PATH
  script:
    - echo $CI_REGISTRY $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD
    - docker build -t $REGISTRY_PATH:$CI_COMMIT_SHA .
    - docker push $REGISTRY_PATH:$CI_COMMIT_SHA

deploy:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $REGISTRY_PATH
  script:
    - if [[ $(docker ps -a --filter "name=springapp" --format '{{.Names}}') == "springapp" ]]; then  docker container rm -f springapp; else echo "No existe";  fi
    - docker run --name "springapp" -d -p 8080:8080 $REGISTRY_PATH:$CI_COMMIT_SHA
